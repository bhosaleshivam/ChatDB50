1. mongodb what collections names exists in my database
-> db.getCollectionNames()

2. mongodb Show me a sample document from the movies collection.
-> db.movies.findOne()

3. mongodb Give me a preview of whatâ€™s inside the users collection.
-> db.users.find()

4. mongodb List the names and emails of all users.
-> db.users.find({}, {"name": 1, "email": 1})

5. mongodb What are the top 5 most common genres of movies?
-> db.movies.aggregate([
  { $group: { _id: "$genre", count: { $sum: 1 } } },
  { $sort: { count: -1 } },
  { $limit: 5 }
])

6. mongodb Count how many movies are available for each language.
-> db.movies.aggregate([
    { $group: { _id: "$language", total: { $sum: 1 } } }
])

7. mongodb Show me 10 comments along with the title of the movie it refers to.
-> db.comments.aggregate([
    {
        $lookup: {
            from: "movies",
            localField: "movie_id",
            foreignField: "_id",
            as: "movie"
        }
    },
    {
        $project: {
            _id: 1,
            content: 1,
            "movie.title": 1
        }
    },
    {
        $limit: 10
    }
])

8. mongodb Show each movie_id with all the comments it has received. Limit to 3 results.
-> db.movies.aggregate([
    {
        $lookup: {
            from: "comments",
            localField: "_id",
            foreignField: "movie_id",
            as: "comments"
        }
    },
    { $unwind: "$comments" },
    { $match: { _id: { $exists: true } } },
    { $limit: 3 },
    { $project: { _id: 1, movie_id: 1, comments: 1 } }
])

9. mongodb find me 5 users after skipping the first 5 users
-> db.users.find().skip(5).limit(5)

INSERT
10. mongodb Add a new user named Shivam Bhosale with email shivam@gmail.com and password dsci551.
-> db.users.insertOne({ name: "Shivam Bhosale", email: "shivam@gmail.com", password: "dsci551" })

11. mongodb Add multiple new theaters in LA and NY
-> db.theaters.insertMany([
  { city: "LA", name: "Theater1" },
  { city: "LA", name: "Theater2" },
  { city: "NY", name: "Theater3" },
  { city: "NY", name: "Theater4" }
]);

UPDATE
12. mongodb update the city of theater name "Theater1" to "NY"
-> db.theaters.updateOne({ name: "Theater1" }, { $set: { city: "NY" } });

DELETE
13. mongodb delete entry with location NY
-> db.comments.deleteOne({ "name": "Alliser Thorne" })

14. mongodb show details about theaters with name Theater1